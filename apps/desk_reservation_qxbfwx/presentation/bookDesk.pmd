{
  "id": "bookDesk",
  "include": [
        "states.script",
        "wql.script"
  ],
  "endPoints": [
    {
      "baseUrlType": "WORKDAY-WQL",
      "name": "allLocations",
      "authType": "sso",
      "url": "data?query=SELECT%20locationName%2C%20workdayID%20FROM%20locations%20(locationUsagesForLocation%20%3D%20(46db411c4a5245fbb39834d8b2cba049))"
    },
    {
      "name": "areas",
      "baseUrlType": "app",
      "url": "areas",
      "authType": "sso"
    },
    {
      "name": "getAreasByLocation",
      "baseUrlType": "WORKDAY-WQL-QUERY",
      "url": "<% wql.getAreasByLocation(location) %>",
      "authType": "sso",
      "deferred": true
    },
    {
      "name": "occupiedDesksInDate",
      "baseUrlType": "WORKDAY-WQL-QUERY",
      "authType": "sso",
      "url": "<% wql.getOccupiedDesksInDateAndArea(date, areaID) %>",
      "deferred": true
    },
    {
      "name": "freeDeskOffArea",
      "baseUrlType": "WORKDAY-WQL-QUERY",
      "authType": "sso",
      "url": "<% wql.getFreeDesksOfArea(ocDesks, areaID) %>",
      "deferred": true
    },
    {
      "name": "desk",
      "baseUrlType": "app",
      "url": "/desks",
      "authType": "sso"
    },
    {
      "name": "currLoginUser",
      "baseUrlType": "COMMON",
      "authType": "sso",
      "url": "workers/me"
    }
  ],
  "outboundData": {
    "outboundEndPoints": [
      {
        "name": "bookingPost",
        "baseUrlType": "app",
        "httpMethod": "POST",
        "url": "bookings",
        "authType": "sso",
        "values": [
          {
            "outboundPath": "state",
            "value": "<% states.requested %>"
          },
          {
            "outboundPath": "worker.id",
            "value": "<% currLoginUser.id %>"
          },
          {
            "outboundPath": "date",
            "value": "<% flowVariables.selectedDate %>"
          }
        ]
      },
      {
        "name": "notificationEvent",
        "baseUrlType": "app",
        "url": "reservationNotificationEvents",
        "httpMethod": "POST",
        "authType": "sso",
        "values": [
          {
            "outboundPath": "businessProcessTarget.id",
            "value": "<% bookingPost.id %>"
          },
          {
            "outboundPath": "description",
            "value": "Booking request sent by <% currLoginUser.descriptor %>."
          }
        ]
      }
    ]
  },
  "script": "<%
             var fillAreas = function(location) {
                 if (empty location) {
                     return [];
                 }
                 var areas = getAreasByLocation.invoke({'location': location}).data;
                 var validAreas = [];
                 for (var area : areas) {
                     validAreas.add({'id': area.Area.id, 'name': area.name});
                 }
                 return validAreas;
             };

             var fillDesks = function(areaID) {
                 if (empty areaID) {
                     return [];
                 }
                 var occupiedDesksList = occupiedDesksInDate.invoke({'date': flowVariables.selectedDate, 'areaID': areaID}).data;
                 var occupiedDesksString = '';
                 // For some reason, occupiedDesksList can be [{}], so we need to check the emptiness of .desk, not just the list itself
                 if (!empty occupiedDesksList[0].desk) {
                   for (var ocDesk : occupiedDesksList) {
                     occupiedDesksString += ocDesk.desk.id + ',';
                   }
                   occupiedDesksString = occupiedDesksString.removeEnd(',');
                 }
                 var freeDesks = freeDeskOffArea.invoke({'ocDesks': occupiedDesksString, 'areaID': areaID}).data;
                 return freeDesks.map(desk => {{'id': desk.Desk.id, 'descriptor': desk.Desk.descriptor}});
             };
             %>",
  "presentation": {
    "headerSize": "VPS_DEFAULT",
    "pageType": "edit",
    "body": {
      "type": "section",
      "horizontal": false,
      "children": [
        {
          "type": "instanceList",
          "id": "locationIList",
          "label": "Location",
          "displayKey": "locationName",
          "idKey":"workdayID",
          "values": "<% allLocations.data %>",
          "onChange": "<%
                       var areas = fillAreas(locationIList.value[0]);
                       areasIList.setValues(areas);
                       areasIList.visible = true;
                       if (empty areas) {
                           areasIList.setError('There are no areas available');
                       }
                       areasIList.setValue([]);
                       %>"
        },
        {
          "type": "instanceList",
          "id": "areasIList",
          "label": "Areas",
          "displayKey": "name",
          "values": "<% areas.data %>",
          "onChange": "<%
                       desksAvailableIList.clearError();
                       if (!empty areasIList.value) {
                           var desks = fillDesks(areasIList.value[0]);
                           desksAvailableIList.setValues(desks);
                           desksAvailableIList.visible = true;
                           if (empty desks) {
                               desksAvailableIList.setError('There are no desks available');
                           }
                       } else {
                           desksAvailableIList.visible = false;
                       }
                       desksAvailableIList.setValue([]);
                       %>"
        },
        {
          "type": "instanceList",
          "id": "desksAvailableIList",
          "label": "Desks available",
          "values": "<% [] %>",
          "valueOutBinding": "bookingPost.desk.id",
          "visible": true,
          "required": true
        }
      ]
    }
  }
}
