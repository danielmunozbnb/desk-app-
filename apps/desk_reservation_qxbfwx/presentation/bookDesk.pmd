{
  "id": "bookDesk",
  "include": [
        "wql.script"
  ],
  "endPoints": [
    {
      "name": "areas",
      "baseUrlType": "app",
      "url": "/areas",
      "authType": "sso"
    },
    {
      "name": "desksByAreaID",
      "baseUrlType": "WORKDAY-WQL-QUERY",
      "url": "<% wql.getDesksByAreaID(areaID) %>",
      "authType": "sso",
      "deferred": true
    },
    {
      "name": "desk",
      "baseUrlType": "app",
      "url": "/desks",
      "authType": "sso"
    },
    {
      "name": "reservations",
      "baseUrlType": "app",
      "url": "/bookings",
      "authType": "sso"
    },
    {
      "baseUrlType": "COMMON",
      "name": "currLoginUser",
      "authType": "sso",
      "url": "/workers/me"
    }
  ],
  "outboundData": {
    "outboundEndPoints": [
      {
        "name": "bookingPost",
        "baseUrlType": "app",
        "httpMethod": "POST",
        "url": "bookings/",
        "authType": "sso",
        "values": [
          {
            "outboundPath": "state",
            "value": "<% 1 %>"
          },
          {
            "outboundPath": "worker.id",
            "value": "<% currLoginUser.id %>"
          },
          {
            "outboundPath": "date",
            "value": "<% flowVariables.selectedDate %>"
          }
        ]
      },
      {
        "name": "notificationEvent",
        "baseUrlType": "app",
        "url": "reservationNotificationEvents",
        "httpMethod": "POST",
        "authType": "sso",
        "onSend": "<% console.debug(json:asJSON(self.data)); self.data; %>",
        "values": [
          {
            "outboundPath": "businessProcessTarget.id",
            "value": "<% bookingPost.id %>"
          }
        ]
      }
    ]
  },
  "script": "<%

              var fillDesks = function(areaID) {
                if (empty areaID) {
                  return [];
                }

                var reservations = reservations.data;
                var desks = desksByAreaID.invoke({'areaID': areaID}).data;
                if (empty reservations) {
                  return desks.map(desk => {{'id': desk.Desk.id, 'descriptor': desk.Desk.descriptor, 'deskName': desk.deskName}});
                } else {
                  var validDesks = [];
                  for (var desk : desks) {
                    for (var booking : reservations) {
                      if (!(desk.Desk.id == booking.desk.id && booking.date == flowVariables.selectedDate && booking.state == 1)) {
                        validDesks.add({'id': desk.Desk.id, 'descriptor': desk.Desk.descriptor, 'deskName': desk.deskName});
                        break;
                      }
                    }
                  }
                  return validDesks;
                }
              };
            %>",
  "presentation": {
    "headerSize": "VPS_DEFAULT",
    "pageType": "edit",
    "body": {
      "type": "section",
      "horizontal": false,
      "children": [
        {
          "type": "instanceList",
          "id": "areasInstanceList",
          "label": "Areas",
          "displayKey": "name",
          "values": "<% areas.data %>",
          "onChange": "<%
                        if (!empty areasInstanceList.value) {
                          deskAvailableForArea.setValues(fillDesks(areasInstanceList.value[0]));
                        }

                        deskAvailableForArea.setValue([]);
                        deskAvailableForArea.clearError();

                        if (!empty areasInstanceList.value) {
                          deskAvailableForArea.setVisible(true);
                        } else {
                          deskAvailableForArea.visible = false;
                        }
                      %>"
        },
        {
          "type": "instanceList",
          "id": "deskAvailableForArea",
          "label": "Desks available",
          "displayKey": "deskName",
          "values": "<% [] %>",
          "valueOutBinding": "bookingPost.desk.id",
          "visible": true,
          "required": true
        }
      ]
    }
  }
}