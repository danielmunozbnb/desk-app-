{
  "id": "selectLocationManageAreas",
  "include": [
    "wql.script"
  ],
  "endPoints": [
    {
      "baseUrlType": "WORKDAY-WQL",
      "name": "allLocationsEP",
      "authType": "sso",
      "url": "<% wql.allLocations() %>"
    },
    {
      "name": "hasLocationAreasEP",
      "baseUrlType": "WORKDAY-WQL",
      "url": "<% wql.hasLocationAreas(location) %>",
      "authType": "sso",
      "deferred": true
    }
  ],
  "outboundData": {
    "outboundEndPoints": [
      {
        "type": "outboundVariable",
        "name": "selectedOrg",
        "variableScope": "session",
        "values": [
          {
            "outboundPath": "selectedLocation.id",
            "value": "<% locationIL.selectedEntries[0].id %>"
          },
          {
            "outboundPath": "selectedLocation.descriptor",
            "value": "<% locationIL.selectedEntries[0].descriptor %>"
          }
        ]
      }
    ]
  },
  "script": "<%

             var fillAreas = function(selectedLocations) {
                 if (empty selectedLocations)
                     return [];

                 var areas = areasByLocationEP.invoke({'location': selectedLocations[0].id}).data;
                 return areas.map(area => {{'id': area.Area.id, 'name': area.name}});
             };

             %>",
  "presentation": {
    "headerSize": "VPS_DEFAULT",
    "pageType": "edit",
    "micro": true,
    "microFirstPageOnly": true,
    "title": {
      "type": "title",
      "label": "<% presentationLabels.selectLocation %>"
    },
    "body": {
      "type": "section",
      "horizontal": false,
      "children": [
        {
          "type": "instanceList",
          "id": "locationIL",
          "label": "<% presentationLabels.location %>",
          "required": true,
          "displayKey": "locationName",
          "idKey": "workdayID",
          "values": "<% allLocationsEP.data %>",
          "onChange": "<%

                       if (empty locationIL.getSelectedEntries())
                           return [];

                       if (empty hasLocationAreasEP.invoke({'location': locationIL.getSelectedEntries()[0].id}).data) {
                           self.setError(presentationLabels.noAreasAvailable);
                       } else
                           self.clearError();

                       %>"
        }
      ]
    }
  }
}